 if (
        (i == 0 && j == 0) ||
        (i == 2 && j == 2) ||
        (i == 2 && j == 3) ||
        (i == 2 && j == 4) ||
        (i == 3 && j == 2) ||
        (i == 3 && j == 3) ||
        (i == 3 && j == 4) ||
        (i == 4 && j == 2) ||
        (i == 4 && j == 3) ||
        (i == 4 && j == 4) ||
        (i == 0 && j == matrixSize - 1) ||
        (i == matrixSize - 1 && j == matrixSize - 1) ||
        (i == matrixSize - 1 && j == 0)
      )

      function moveCandyDownSmoothly(candy) {
  const movementIncrement = cellSize / 50;
  const move = () => {
    if (
      !(candy.x === startX + cellSize * 2 && candy.y === startY * 2) &&
      !(candy.x === startX + cellSize * 3 && candy.y === startY * 2) &&
      !(candy.x === startX + cellSize * 4 && candy.y === startY * 2) &&
      !(candy.x === startX && candy.y === startY * 6) &&
      !(
        candy.x === startX + cellSize * (matrixSize1 - 1) &&
        candy.y === startY * 6
      ) &&
      !isCandyBelow(candy) &&
      candy.y + movementIncrement <= matrixSize1 * cellSize
    ) {
      candy.y += movementIncrement;
      requestAnimationFrame(move);
    }
  };
  move();
}